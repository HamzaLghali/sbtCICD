spec:
  inputs:
    stage:
      description: "GitLab CI/CD stage"
    jvm_version:
      default: "eclipse-temurin-jammy-22_36"
      description: "Version of JVM/OS used in base image"
    sbt_version:
      default: "1.10.0"
      description: "Version of sbt used in base image"
    scala_version:
      options:
        - "2.13.14"
        - "3.3.3"
        - "3.4.2"
      regex: ^\d.\d+.\d+$
      description: "Version of Scala used in base image"
    additional_libs:
      description: "Additional libraries to installed in base image, separated by whitespace"
    job_uid:
      description: "When extended by multiple jobs in one pipeline, this prohibits the overwrite of input variables"
---
cache:
  # use this key to share among all commits in the branch (cf. https://docs.gitlab.com/ee/ci/caching/#share-caches-between-jobs-in-the-same-branch)
  key: "$CI_COMMIT_REF_SLUG"
  paths:
    - "sbt-cache/ivy/cache"
    - "sbt-cache/boot"
    - "sbt-cache/sbtboot"
    - "sbt-cache/target"

.sbt-base-$[[ inputs.job_uid ]]:
  variables:
    SBT_OPTS: "-Dsbt.global.base=sbt-cache/sbtboot -Dsbt.boot.directory=sbt-cache/boot -Dsbt.ivy.home=sbt-cache/ivy"
  image: sbtscala/scala-sbt:$[[ inputs.jvm_version ]]_$[[ inputs.sbt_version ]]_$[[ inputs.scala_version ]]
  stage: $[[ inputs.stage ]]
  before_script:
    - if [ -n "$[[ inputs.additional_libs ]]" ]; then apt-get update && apt-get install -y $[[ inputs.additional_libs ]]; fi
